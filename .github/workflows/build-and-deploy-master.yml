# This is a basic workflow to help you get started with Actions

name: Build and Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Use Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # Runs a single command using the runners shell
    - run: yarn
    - run: yarn install-peers -f

    # Runs a set of commands using the runners shell
    - run: yarn snyk-protect
    
    # Runs a set of commands using the runners shell
    - run: yarn test
  
  deploy: 
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
    needs: [ build ]
    if: "!startsWith(github.event.head_commit.message, 'New version:')"
    steps:
    - uses: actions/checkout@v2

    - name: Use Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: git config --global user.name "Github Actions CI"
    - run: git config --global user.email "ci@dreamconflux.com"
    - run: yarn
    - run: yarn install-peers -f
    - run: git reset --hard
    - run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > .npmrc
      env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - run: "npm version patch -m 'New version: %s'"
      if: "!startsWith(github.event.head_commit.message, '[Release M')"
    - run: "npm version minor -m 'New version: %s'"
      if: "startsWith(github.event.head_commit.message, '[Release Minor]')"
    - run: "npm version major -m 'New version: %s'"
      if: "startsWith(github.event.head_commit.message, '[Release Major]')"
    - run: npm publish
    - run: git push --follow-tags